---
title: "linearregression"
format:
  html:
    code-fold: true
execute:
  warning: false
  message: false
---

```{r}
# load required libraries
library(tidyverse)
library(WDI)
```

```{r}
# define indicators for infant mortality and gdp per capita
indicators <- c(
  "SP.DYN.IMRT.IN",
  "NY.GDP.PCAP.CD"
)

# download and prepare data
data <- WDI(
  country = "all", 
  indicator = indicators, 
  extra = TRUE) |>
  # rename columns
  rename(
    infant_mortality = SP.DYN.IMRT.IN,
    gdp_percap = NY.GDP.PCAP.CD
  ) |>
  # filter out missing values
  filter(
    !is.na(infant_mortality),
    !is.na(gdp_percap)
  ) |>
  # select columns to include
  select(
    country,
    year,
    infant_mortality,
    gdp_percap
  )
```

```{r}
summary(data)
```

```{r}
# define countries of interest
data_countries <- c("United States", "China", "Sweden", "India", "Egypt")

# filter data for the year 2022
data_2022 <- data |>
  filter(
    year == 2022
  )


# filter countries of interest for 2022
countries_2022 <- data_2022 |>
  filter(
    country %in% data_countries
  )

# filter data for the year 2000
data_2000 <- data |>
  filter(
    year == 2000
  )

# filter countries of interest for 2000
countries_2000 <- data_2000 |>
  filter(
    country %in% data_countries
  )
```

# Linear Regression Model

```{r}
# fit linear model for 2022
model_2022 <- lm(infant_mortality ~ gdp_percap, data = data_2022)

# fit linear model for 2000
model_2000 <- lm(infant_mortality ~ gdp_percap, data = data_2000)

# add predicted mortality to 2022 data
data_2022 <- data_2022 |>
  mutate(
    predicted_mortality = predict(model_2022)
  )

# add predicted mortality to 2000 data
data_2000 <- data_2000 |>
  mutate(
    predicted_mortality = predict(model_2000)
  )
```

# 2000 Data

```{r}

ggplot(data_2000,
       aes(x = gdp_percap, y = infant_mortality)) +
  geom_point(
    aes(color = country),
    alpha = 0.6
  ) +
  # linear regression line
  geom_line(
    aes(y = predicted_mortality),
    color = "black",
    size = 1
  ) +
  # highlighted countries
  geom_point(data = countries_2000,
    aes(x = gdp_percap, y = infant_mortality, color = country),
    size = 4
  ) +
  geom_label(data = countries_2000,
    aes(label = country, color = country),
    hjust = 0,
    nudge_x = 6
  ) +
  # keeps y axis aligned correctly
  coord_cartesian(xlim = c(0, 100000), ylim = c(0, 100)) +
  scale_x_continuous(
    breaks = seq(0, 100000, by = 10000),
    labels = c("0", "$10k", "$20k", "$30k", "$40k", "$50k", "$60k", "$70k", "80k", "$90k", "$100k"),
    expand = c(0, 0.2)
  ) +
  scale_y_continuous(
    breaks = seq(0, 100, by = 25),
    labels = c("0%", "25%", "50%", "75%", "100%")
  ) +
  # titles and labels
  labs(
    title = "Fitting a Linear Model: GDP & Infant Mortality (2000)",
    subtitle = "World Development Indicators Dataset",
    x = "GDP per capita",
    y = "Infant Mortality (percent)"
  ) +
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    legend.position = "none"
  )
```

# 2022 Data

```{r}
# plot data and model for 2022
ggplot(data_2022,
       aes(x = gdp_percap, y = infant_mortality)) +
  geom_point(
    aes(color = country),
    alpha = 0.6
  ) +
  # linear regression line
  geom_line(
    aes(y = predicted_mortality),
    color = "black",
    size = 1
  ) +
  # highlighted countries
  geom_point(data = countries_2022,
    aes(x = gdp_percap, y = infant_mortality, color = country),
    size = 4
  ) +
  geom_label(data = countries_2022,
    aes(label = country, color = country),
    hjust = 0,
    nudge_x = 6
  ) +
  # keeps y axis aligned correctly
  coord_cartesian(xlim = c(0, 100000), ylim = c(0, 100)) +
  scale_x_continuous(
    breaks = seq(0, 100000, by = 10000),
    labels = c("0", "$10k", "$20k", "$30k", "$40k", "$50k", "$60k", "$70k", "80k", "$90k", "$100k"),
    expand = c(0, 0.2)
  ) +
  # titles and labels
  labs(
    title = "Fitting a Linear Model: GDP & Infant Mortality (2022)",
    subtitle = "World Development Indicators Dataset",
    x = "GDP per capita",
    y = "Infant Mortality (percent)"
  ) +
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    legend.position = "none"
  )
```

```{r}
all_countries <- unique(data_2022$country)

data_average <- data.frame(
  country = character(),
  avg_mortality = numeric()
)

for (x in all_countries) {
  avg <- mean(data$infant_mortality[data$country == x], na.rm = TRUE)
  data_average <-rbind(data_average, data.frame(
    country = x,
    avg_mortality = avg
  ))
}

data_2022 <- left_join(data_2022, data_average, by = "country")
```

# Comparison

```{r}
# compare models for 2000 and 2022 in one plot
ggplot(data_2022,
       aes(x = gdp_percap, y = avg_mortality)) +
  geom_point(
    color = "green",
    alpha = 0.6
  ) +
  geom_line(data = data_2000,
    aes(y = predicted_mortality),
    color = "pink",
    size = 1
  ) +
  geom_line(
    aes(y = predicted_mortality),
    color = "blue",
    size = 1
  ) +
  coord_cartesian(xlim = c(0, 100000), ylim = c(0, 100)) +
  scale_x_continuous(
    breaks = seq(0, 100000, by = 10000),
    labels = c("0", "$10k", "$20k", "$30k", "$40k", "$50k", "$60k", "$70k", "80k", "$90k", "$100k"),
    expand = c(0, 0.2)
  ) +
  labs(
    title = "Fitting a Linear Model: GDP & Infant Mortality (2000 compared to 2022)",
    subtitle = "World Development Indicators Dataset",
    x = "GDP per capita",
    y = "Infant Mortality (percent)"
  ) +
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    legend.position = "none"
  )
```
